{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Gateway</p>"},{"location":"#about","title":"About","text":"<p>The Docker Unified UIMA Interface \u2013 Gateway (DUUIGateway for short) is a web and REST-based software solution for encapsulating and utilising the Docker Unified UIMA Interface, a Big Data NLP framework for the automatic processing of heterogeneous NLP tools, based on UIMA and using microservices such as Docker or Kubernetes.</p> <p>DUUI as well as DUUIGateway are developed and maintained at the Texttechnologylab (TTLab) at the Goethe University Frankfurt.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>Automatic analysis of large text corpora is a complex task. This complexity particularly concerns the question of time efficiency. Furthermore, efficient, flexible, and extensible textanalysis requires the continuous integration of every new text analysis tools. Since there are currently, in the area of NLP and especially in the application context of UIMA, only very few to no adequate frameworks for these purposes, which are not simultaneously outdated or can no longer be used for security reasons, this work will present a new approach to fill this gap.</p> <p>DUUIGateway is a tool that completely encapsulates DUUI and allows its use in a functional web interface as well as by integrating an API.</p>"},{"location":"#team","title":"Team","text":"<ul> <li>Cederic Borkowski </li> <li>Prof. Dr. Alexander Mehler (Leader TTLab)  </li> <li>Giuseppe Abrami  </li> <li>Dawit Terefe </li> </ul>"},{"location":"#usage-support","title":"Usage &amp; Support","text":"<p>To use DUUIGateway, you only need Docker or podman to run a Compose setup. After successful setup, extensive documentation is available in DUUIGateway (cf. Documentation).</p> <p>For support, please contact our team or use our dedicated </p>"},{"location":"features/","title":"Features","text":"<p>DUUIGateway includes a range of features which facilitate its effective and easy use of DUUI in various contexts and application areas.</p>"},{"location":"features/#user-management","title":"User management","text":"<p>DUUIGateway has a relatively straightforward user management system in which a distinction is maintained between the roles of user and admin. At the same time, groups can be created and users can be assigned to them.</p> <ul> <li>Role user: Users can use all functions of DUUIGateway to construct pipelines, create connectors and execute processes. The available resources in the cluster, as well as all other system parameters, are configured by the admins.</li> <li>Role admin: Administrators also have the ability to make global settings, manage groups as well as assign users to groups.</li> </ul>"},{"location":"features/#web-and-rest-interface","title":"Web and REST interface","text":"<p>The web interface and the REST API are the core components of DUUI Gateway. Both features are interlinked and the web interface provides a general and generic accessibility of DUUI Gateway, which can also be used via the API after sessions and user accounts have been created.</p> Extract from the REST API. <p>Both interfaces allow pipelines to be created, managed, DUUI components to be added or modified and processes to be started or monitored.</p>"},{"location":"features/#client-libraries","title":"Client libraries","text":""},{"location":"features/#dynamic-pipeline-construction","title":"Dynamic pipeline construction","text":"In order to process texts, various pipelines can be created and assembled using DUUI components.  Pipelines can also be saved as templates for future use.  Once a pipeline has been created, these can be executed as processes, where the source and destination of the files which are to be processed can be selected from a set of existing connectors.       This involves selecting a folder in a Nextcloud instance added by the user via the browser and selecting further parameters for the selection."},{"location":"features/#result-and-monitoring","title":"Result and monitoring","text":"<p>After or during the execution of a pipeline, the process progress and its status can be visualized and queried. Processed documents can be selected and examined.</p> The progress of the individual processed documents is displayed and the results are also visualized by selecting a document. The results of the annotation are visualized at document level with highlighting based on the selected annotation class. At the same time, statistical information on all annotations in the respective document is also visualized graphically."},{"location":"features/#notification","title":"Notification","text":"<p>Due to the user-related processing of DUUI processes, processes can be monitored live and the owners of the processes are also informed of the result of the processing via e-mail via DUUI Gateway.</p> A Result email after processing a pipeline defined in DUUI Gateway."},{"location":"features/#connectors","title":"Connectors","text":"<p>DUUIGateway is capable of connecting to various cloud-based systems listed below, which can be individually configured and connected by the user in order to read in corpora for processing or subsequently serialize them again.</p> <ul> <li>Google Drive</li> <li>Nextcloud</li> <li>Dropbox</li> <li>Amazon Simple Storage Service (Amazon S3)</li> <li>minio for personal use</li> </ul> Exemplary connection to a Nextcloud instance"},{"location":"features/#summary","title":"Summary","text":"<p>All of these features can be used by anyone. DUUIGateway is freely available and can be easily instantiated via Docker. Instructions can be found under Setup.</p> <p>If you use DUUI Gateway, refer to the specified citation.</p>"},{"location":"javadocs/","title":"Javadoc","text":"<p>Below you'll find the embedded Javadoc for our project. This page provides a broad overview of our backend APIs. </p>"},{"location":"publications/","title":"Publications","text":""},{"location":"publications/#publications","title":"Publications","text":"<p>Here we list all publications related to DUUIGateway, which you can also refer to when citing DUUIGateway or DUUI itself, in your work:</p> <p><pre><code>@inproceedings{Leonhardt:et:al:2023,\n    title = \"Unlocking the Heterogeneous Landscape of Big Data {NLP} with {DUUI}\",\n    author = \"Leonhardt, Alexander  and\n      Abrami, Giuseppe  and\n      Baumartz, Daniel  and\n      Mehler, Alexander\",\n    editor = \"Bouamor, Houda  and\n      Pino, Juan  and\n      Bali, Kalika\",\n    booktitle = \"Findings of the Association for Computational Linguistics: EMNLP 2023\",\n    month = dec,\n    year = \"2023\",\n    address = \"Singapore\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2023.findings-emnlp.29\",\n    doi = \"10.18653/v1/2023.findings-emnlp.29\",\n    pages = \"385--399\"\n}\n\n@article{Abrami:et:al:2025:a,\n  title     = {Docker Unified UIMA Interface: New perspectives for NLP on big data},\n  journal   = {SoftwareX},\n  volume    = {29},\n  pages     = {102033},\n  year      = {2025},\n  issn      = {2352-7110},\n  doi       = {https://doi.org/10.1016/j.softx.2024.102033},\n  url       = {https://www.sciencedirect.com/science/article/pii/S2352711024004047},\n  author    = {Giuseppe Abrami and Markos Genios and Filip Fitzermann and Daniel Baumartz and Alexander Mehler}\n}\n</code></pre> </p>"},{"location":"setup/","title":"DUUIGateway Setup Guide","text":"<p>This document describes how to set up and configure DUUIGateway, including Docker-based deployment and necessary configuration.</p>"},{"location":"setup/#overview","title":"Overview","text":"<p>DUUIGateway consists of two main components:</p> <ul> <li>Backend: REST API for NLP processing</li> <li>Frontend: Web interface built with SvelteKit</li> </ul> <p>Both components are containerized using Docker, simplifying setup and deployment.</p>"},{"location":"setup/#prerequisites","title":"Prerequisites","text":"<p>Make sure you have installed:</p> <ul> <li>Docker and Docker Compose</li> <li>Node.js and npm (for frontend development)</li> <li>Java 21</li> </ul>"},{"location":"setup/#docker-setup","title":"Docker Setup","text":"<p>The application uses Docker Compose for simple setup and deployment. Below is an explanation of the provided Docker Compose configuration:</p>"},{"location":"setup/#docker-compose-explanation-docker-composeyml","title":"Docker Compose Explanation (<code>docker-compose.yml</code>)","text":"<p>The docker-compose file defines two services:</p> <ul> <li> <p>duui-backend:</p> <ul> <li>Builds from <code>./DUUIRestService</code></li> <li>Exposed on port <code>2605</code></li> <li>Mounts Docker socket (<code>/var/run/docker.sock</code>) allowing the backend to manage Docker containers itself.</li> </ul> </li> <li> <p>duui-frontend:</p> <ul> <li>Builds from <code>./DUUIWeb</code></li> <li>Depends on the backend</li> <li>Exposed on port <code>5173</code></li> <li>Environment variables configure frontend-backend connectivity (<code>API_URL=http://duui-backend:2605</code>)</li> </ul> </li> </ul>"},{"location":"setup/#example","title":"Example:","text":"<pre><code>version: '3.3'\n\nservices:\n  duui-backend:\n    build:\n      context: ./DUUIRestService\n      dockerfile: Dockerfile\n    container_name: duui-backend\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    ports:\n      - \"2605:2605\"\n\n  duui-frontend:\n    build:\n      context: ./DUUIWeb\n      dockerfile: Dockerfile\n    container_name: web-frontend\n    ports:\n      - \"5173:5173\"\n    depends_on:\n      - duui-backend\n    environment:\n      - API_URL=http://duui-backend:2605\n      - PORT=5173\n      - DBX_URL='https://www.dropbox.com/home/Apps/DUUI'\n</code></pre>"},{"location":"setup/#configuration-configini","title":"Configuration (<code>config.ini</code>)","text":"<p>Configuration variables are managed through <code>config.ini</code>, which contains API credentials, server port, file locations, and database connections.</p>"},{"location":"setup/#example-configini","title":"Example <code>config.ini</code>:","text":"<pre><code># Dropbox configuration\nDBX_APP_KEY=\nDBX_APP_SECRET=\nDBX_REDIRECT_URL=\n\n# Google Drive configuration\nGOOGLE_CLIENT_ID=\nGOOGLE_CLIENT_SECRET=\nGOOGLE_REDIRECT_URI=\n\n# Application configuration\nPORT=2605  # Match with Docker Compose backend port\nHOST=0.0.0.0  # 0.0.0.0 makes backend accessible from all IP addresses\n\n# File Upload Configuration\nFILE_UPLOAD_DIRECTORY=/temp\n\n# MongoDB Connection\nMONGO_HOST=\nMONGO_PORT=\nMONGO_DB=\nMONGO_USER=\nMONGO_PASSWORD=\n\n# Alternatively, provide a MongoDB connection string\nMONGO_DB_CONNECTION_STRING=\n</code></pre>"},{"location":"setup/#obtaining-api-keys","title":"Obtaining API Keys","text":"<p>You must obtain keys for Dropbox and Google Drive:</p> <ul> <li>Dropbox: Dropbox Developers Console</li> <li>Google Drive: Google Cloud Console</li> </ul> <p>Follow their respective documentation to set up OAuth credentials.</p>"},{"location":"setup/#running-the-application","title":"Running the Application","text":"<p>To deploy locally:</p> <ol> <li>Clone repository and navigate into the root directory.</li> <li>Start the application using Docker Compose:</li> </ol> <pre><code>docker-compose up --build\n</code></pre> <p>The frontend will be available at http://localhost:5173.</p> <p>To ensure the frontend correctly communicates with the backend, ensure ports in <code>config.ini</code> and <code>docker-compose.yml</code> match appropriately (<code>PORT=2605</code>).</p>"},{"location":"setup/#frontend-development-setup","title":"Frontend Development Setup","text":"<p>For local frontend development:</p> <pre><code>cd DUUIWeb\nnpm install\nnpm run dev -- --open --host\n</code></pre> <p>This setup provides auto-reload functionality, ideal for iterative frontend development.</p>"},{"location":"setup/#security-and-access-control","title":"Security and Access Control","text":"<p>DUUIGateway adheres to industry-standard security practices for handling API keys, secrets, and authentication. However, the application is actively developed, and additional security measures are continuously being implemented. Developers and deployers should remain cautious, keep security best practices in mind, and regularly update the system to mitigate any emerging security concerns.</p>"},{"location":"setup/#further-documentation","title":"Further Documentation","text":"<p>Refer to the DUUIGateway Documentation for more detailed instructions, API references, and developer guidelines.</p> <p>This comprehensive setup guide helps developers get started quickly and contributes effectively to ongoing development.</p>"},{"location":"javadoc/legal/jquery/","title":"Jquery","text":""},{"location":"javadoc/legal/jquery/#jquery-v371","title":"jQuery v3.7.1","text":""},{"location":"javadoc/legal/jquery/#jquery-license","title":"jQuery License","text":"<pre><code>jQuery v 3.7.1\nCopyright OpenJS Foundation and other contributors, https://openjsf.org/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>"},{"location":"javadoc/legal/jqueryUI/","title":"jqueryUI","text":""},{"location":"javadoc/legal/jqueryUI/#jquery-ui-v1132","title":"jQuery UI v1.13.2","text":""},{"location":"javadoc/legal/jqueryUI/#jquery-ui-license","title":"jQuery UI License","text":"<pre><code>Copyright jQuery Foundation and other contributors, https://jquery.org/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/jquery-ui\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code contained within the demos directory.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n</code></pre>"}]}